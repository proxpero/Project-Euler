//: [Pentagonal Numbers](https://projecteuler.net/problem=44)
/*:
Pentagonal numbers are generated by the formula, P[n]=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P[4] + P[7] = 22 + 70 = 92 = P[8]. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, P[j] and P[k], for which their sum and difference are pentagonal and D = |P[k] − P[j]| is minimised; what is the value of D?
*/
/*:
from [Wikipedia's article on Pentagonal Number](https://en.wikipedia.org/wiki/Pentagonal_number)
>The simplest way to test whether a positive integer x is a (non-generalized) pentagonal number is by computing
>![n = (sqrt(24.0 * Double(x) + 1.0) + 1.0) / 6.0](https://upload.wikimedia.org/math/f/e/4/fe488e73246b16817c149a101e8dd1f8.png)
>If n is a natural number, then x is the nth pentagonal number. If n is not a natural number, then x is not pentagonal.
*/

import Darwin

extension Int {
    
    var pentagonal: Int {
        return Int(Double(self * (3 * self - 1)) / 2)
    }
    
    var isPentagonal: Bool {
        let result = (sqrt(24.0 * Double(self) + 1.0) + 1.0) / 6.0
        return result == round(result)
    }
}

func problem_044() -> Int {
    for k in (1..<Int.max) {
        let pk = k.pentagonal
        
        inside: for j in (1..<k) {
            
            let pj = j.pentagonal
            
            if !(pk + pj).isPentagonal {
                continue inside
            }
            
            let diff = pk - pj
            if !diff.isPentagonal {
                continue inside
            }
            
            print("P(\(k)) = \(pk), P(\(j)) = \(pj), difference = \(diff)")
            return diff
        }
    }
    fatalError()
}